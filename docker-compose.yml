version: "3.9"

services:

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - VIRTUAL_HOST=grafana.darkkeks.me

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus-storage:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=5y'
      - '--web.enable-lifecycle'

  pushgateway:
    image: prom/pushgateway
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=prometheus.darkkeks.me

  nginx-proxy:
    image: jwilder/nginx-proxy:latest
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - /srv/http/darkkeks.me:/srv/http/darkkeks.me

  # Пустой контейнер для nginx-proxy, 
  # пока нету нормального содержимого для домена darkkeks.me
  dummy-host:
    build: ./dummy/
    environment:
      - VIRTUAL_HOST=darkkeks.me

  host-monitoring:
    image: prom/node-exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  kks-stat:
    build:
      context: ./telegram-bots/
      dockerfile: ./kks-stat/deploy/Dockerfile
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - VIRTUAL_HOST=kks.darkkeks.me

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: kks
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
      - postgres-data:/data/postgres

volumes:
  grafana-storage:
  prometheus-storage:
  postgres-data:
